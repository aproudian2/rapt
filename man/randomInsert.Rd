% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster_functions.R, R/rapt_sim-cluster.R
\name{randomInsert}
\alias{randomInsert}
\title{Helper for \code{\link{makecluster}} to insert random cluster points}
\usage{
randomInsert(cluster.Indices, n, N)

randomInsert(cluster.Indices, n, N)
}
\arguments{
\item{cluster.Indices}{A numeric vector. A vector containing the indices of
the current cluster points.}

\item{n}{The number of points that need to be placed randomly}

\item{N}{The number of points in the entire underlaying pattern.}

\item{cluster.indices}{A vector containing the indices of the current cluster
points}

\item{s}{The seed for the random inserted points.}

\item{points.avoid}{A vector containing the indices of the points you don't
want the function to insert points to.}

\item{n}{A numeric. The number of points that need to be placed randomly.}

\item{N}{A numeric. The number of points in the entire underlying pattern.}
}
\value{
New indices vector containing new cluster points randomly placed.

A numeric vector containing the indicies of the background points.
}
\description{
When \code{pip} argument of \code{\link{makecluster}} is not equal to 1, or
\code{superfast == TRUE}, there may be random points that need to be marked
as cluster type placed within the underlaying pattern. This function does
just that.

\code{randomInsert} randomly places points within the under data set, if not
100% of the cluster points are set to be in the clusters
}
